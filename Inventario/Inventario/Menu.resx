<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>